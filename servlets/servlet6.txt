File Uploading 
===============
The process of capturing a file from client machine file system and storing in a server machine file system is called file uploading and reverse is called file downloading.

While dealing with matrimonial applications, job portal applications, profile management applications we need to upload and download a file.

There is specific API in servlets to perform file uploading.

We need to take the support of third party API called JAVAZOOM API.

JAVAZOOM API comes in zip format and once if we extracted we will get three jar files.

ex:
	uploadbean.jar 
	struts.jar 
	cos.jar 

We can take file component in a form page as follow.
ex:
	<input type="file" name="f1"/>


JAVAZOOM API 
------------
https://drive.google.com/file/d/1XXQqn3rQ_yWTr-i4DT0nl4_nCDE2ejWl/view?usp=drive_link



Deployment Directory Structure 
------------------------------
UploadApp
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|---FormSrv.java
|---Webcontent 
	|
	|---form.html
	| 
	|---WEB-INF
		|
		|------web.xml 
		|		
		|------lib
			|
			|---uploadbean.jar 
			|---struts.jar
			|---cos.jar 
Note:
-----
In above application we need to add "servlet-api.jar" and "uploadbean.jar" file in project build path.

Copy and paste javazoom jar files inside "WEB-INF/lib" folder seperately.


form.html
---------

<form action="test" method="POST" enctype="multipart/form-data">
	
	File1 : <input type="file" name="f1"/> <br>
	
	File2 : <input type="file" name="f2"/> <br> 
	
	<input type="submit" value="upload"/>
	
</form>

web.xml 
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>FormSrv</servlet-name>
  	<servlet-class>com.ihub.www.FormSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>FormSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

FormSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import javazoom.upload.MultipartFormDataRequest;
import javazoom.upload.UploadBean;

public class FormSrv extends HttpServlet 
{
	protected void doPost(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//file uploading 
		try
		{
			UploadBean ub=new UploadBean();
			ub.setFolderstore("D:\\srikanth");
			ub.setOverwrite(false);
			
			MultipartFormDataRequest nreq=new MultipartFormDataRequest(req);
			ub.store(nreq);
			
			pw.println("Files are uploaded successfully");
		}
		catch(Exception e)
		{
			pw.println(e);
		}
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/UploadApp1/





ServletConfig 
==============
ServletConfig is an interface which is present in javax.servlet package.

ServletConfig object created by the web container for every servlet.

ServletConfig object is used to read configuration information from web.xml file.

We can create ServletConfig object as follow.

ex:
	ServletConfig config=getServletConfig(); 

ServletConfig interface contains following methods.

1) getInitParameter(String name) 

2) getInitParameterNames() 

3) getServletName() 

4) getServletContext() 


Deployment Directory Structure 
------------------------------
ConfigApp
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv.java
|---Webcontent 
	|
	|---index.html
	| 
	|---WEB-INF
		|
		|------web.xml 
Note
-----
In above application we need to add "servlet-api.jar"  file in project build path.

index.html
---------
<center>
	<h1>
		<a href="test"> click me </a>
	</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 
 	<servlet>
 		<servlet-name>TestSrv</servlet-name>
 		<servlet-class>com.ihub.www.TestSrv</servlet-class>
 		<init-param>
 			<param-name>driver</param-name>
 			<param-value>oracle.jdbc.driver.OracleDriver</param-value>
 		</init-param>	
 		<init-param>
 			<param-name>url</param-name>
 			<param-value>jdbc:oracle:thin:@localhost:1521:XE</param-value>
 		</init-param>
 	</servlet>
 	
 	<servlet-mapping>
 		<servlet-name>TestSrv</servlet-name>
 		<url-pattern>/test</url-pattern>
 	</servlet-mapping>
 	
 	<welcome-file-list>
 		<welcome-file>index.html</welcome-file>
 	</welcome-file-list>
 
</web-app>

TestSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		ServletConfig config=getServletConfig();
		
		pw.println(config.getInitParameter("driver")+"<br>");
		pw.println(config.getInitParameter("url")+"<br>");
		
		Enumeration<String> e=config.getInitParameterNames();
		while(e.hasMoreElements())
		{
			String s = e.nextElement();
			pw.println(s+"<br>");
		}
		
		pw.println(config.getServletName());
		
		pw.close();
		
	}
}

Request url
----------
	http://localhost:2525/ConfigApp/



ServletContext 
===============
ServletContext is an interface which is present in javax.servlet package.

ServletContext object is created by the web container for every web application.

ServletCotnext object is used to read configuration information from web.xml file which is global.

We can create ServletContext object as follow.
ex:
	ServletContext context=getServletContext(); 

	or 

	ServletContext context=ServletConfig.getServletContext(); 

ServletContext interface contains following methods.

1) getInitParameter(String name) 

2) getInitParameterNames() 

3) setAttributes(String name,Object object)

4) getAttribute(String name) 

5) removeAttribute(String name)

Deployment Directory Structure 
------------------------------
ContextApp
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv.java
|---Webcontent 
	|
	|---index.html
	| 
	|---WEB-INF
		|
		|------web.xml 
Note
-----
In above application we need to add "servlet-api.jar"  file in project build path.



index.html
---------
<center>
	<h1>
		<a href="test"> click me </a>
	</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 
 	<servlet>
 		<servlet-name>TestSrv</servlet-name>
 		<servlet-class>com.ihub.www.TestSrv</servlet-class>
 	</servlet>
 	
 	<servlet-mapping>
 		<servlet-name>TestSrv</servlet-name>
 		<url-pattern>/test</url-pattern>
 	</servlet-mapping>
 	
 	<context-param>
 			<param-name>driver</param-name>
 			<param-value>oracle.jdbc.driver.OracleDriver</param-value>
 	</context-param>	
 	<context-param>
 			<param-name>url</param-name>
 			<param-value>jdbc:oracle:thin:@localhost:1521:XE</param-value>
 	</context-param>
 	
 	<welcome-file-list>
 		<welcome-file>index.html</welcome-file>
 	</welcome-file-list>
 
</web-app>




TestSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		ServletContext context=getServletContext();
		
		pw.println(context.getInitParameter("driver")+"<br>");
		pw.println(context.getInitParameter("url")+"<br>");
		
		Enumeration<String> e=context.getInitParameterNames();
		while(e.hasMoreElements())
		{
			String s = e.nextElement();
			pw.println(s+"<br>");
		}
		
		context.setAttribute("name","Alan");
		context.setAttribute("age", 29);
		
		pw.println(context.getAttribute("name")+"<br>");
		pw.println(context.getAttribute("age")+"<br>");
		
		context.removeAttribute("name");
		context.removeAttribute("age");
	
		pw.close();
		
	}
}


Request url
----------
	http://localhost:2525/ConfigApp/
































