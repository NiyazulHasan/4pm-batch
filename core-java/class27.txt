Types of objects in java
=========================
We have two types of objects in java.

1) Immutable object 

2) Mutable object 

1) Immutable object 
-------------------
After object creation if we perform any changes then for every change a new object will be 
created such type of object is called immutable object.
ex:
	String and Wrapper classes


2) Mutable object 
------------------
After object creation if we perform any changes then all the required changes will be done 
in a same object such type of object is called mutable object.
ex:
	StringBuffer and StringBuilder

String
=======
A string is a collection of characters which is enclosed in a double quotation.

case1:
------
Once if we create a String object we can perform any changes.If we perform any changes then 
for every change a new object will be created such behaviour is called immutability of an object.

Diagram: class27.1


case2:
-----
Q) What is the difference between == and equals() method?

==
---
It is used for reference comparision or address coparision.

We can compare primitive types and object types.

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		String s1=new String("ihub");
		String s2=new String("talent");
		System.out.println(s1==s2);//false

	}
}

equals()
----------
It is used for content comparision and it is case sensitive.

It is used to compare only object types.

ex:
--
class Test 
{
	public static void main(String[] args) 
	{
		String s1=new String("ihub");
		String s2=new String("ihub");
		System.out.println(s1.equals(s2));//true

	}
}


case3:
-----
Whenever we create a String object. Two objects will be created one is on heap and another is 
on SCP (String Constant Pool) area. But reference points to heap area only.

Diagram: class27.2

Object creation in SCP area is always optional. First JVM will check is there any object is 
created with same content or not. If it is created then JVM simply refers to that object. If it 
is not created then JVM will create a new object.Hence there is no chance of having duplicate 
objects in SCP area.

SCP objects do not have any object reference , even though garbage collector can't access them.

SCP objects will destroy automatically whenever JVM shutdowns or terminated.

Diagram: class27.3


Interning of String object
----------------------------
With the help of heap object reference if we need corresponding SCP object reference then 
we need to use intern() method.

Diagram: class27.4


String important methods
=========================
class Test 
{
	public static void main(String[] args) 
	{
		String str="ihubtalenta";

		System.out.println(str.length());//10

		System.out.println(str.toUpperCase());//IHUBTALENT

		System.out.println(str.toLowerCase());//ihubtalent

		System.out.println(str.charAt(3));//b

		System.out.println(str.indexOf('a'));//5

		System.out.println(str.lastIndexOf('a'));//10

		System.out.println(str.concat("management"));//ihubtalentamanagement

	}
}


Q) Write a java program to remove spaces from given string?

input:
	I hub  Tal ent

output:
	IhubTalent 

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		String str="I hub  Tal ent";

		str= str.replaceAll("\\s","");

		System.out.println(str);

	}
}


Q) Write a java program to remove special characters from given string?

input:
	I_hub@Tal$ent1#

output:
	IhubTalent1

ex:
---
 
class Test 
{
	public static void main(String[] args) 
	{
		String str="I_hub@Tal$ent1#";

		str= str.replaceAll("[^A-Za-z0-9]","");

		System.out.println(str); 

	}
}

Q)Write a java program to concatinate two strings?

input:
	Ihub20
	Talent30
output:
	IhubTalent50

ex:
--
class Test 
{
	public static void main(String[] args) 
	{
		String s1="Ihub20";
		String s2="Talent30";

		String word1=s1.replaceAll("[^A-Za-z]","");
		int no1=Integer.parseInt(s1.replaceAll("[^0-9]",""));

		String word2=s2.replaceAll("[^A-Za-z]","");
		int no2=Integer.parseInt(s2.replaceAll("[^0-9]",""));

		String word=word1+word2;

		int num=no1+no2;

		System.out.println(word+num);
	}
}

Q) Write a java program to display the characters from given string?

input:
	ihub
output:
	i
	h
	u
	b 

ex:
---
class Test 
{
	public static void main(String[] args) 
	{
		String str="ihub";

		for(int i=0;i<str.length();i++)
		{
			System.out.println(str.charAt(i));
		}
	}
}
























































